name: build

on:
  merge_group:
  workflow_dispatch:
  pull_request:
  push:
    tags:
      - "v*.*.*"
    branches:
      - main
    paths-ignore:
      - "README.md"
      - "helm/**"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: compute architectures for build
        uses: actions/github-script@v7
        id: compute-arch
        with:
          result-encoding: string
          script: |
            all = "linux/amd64, linux/arm64";
            canary = "linux/amd64";
            if (context.eventName === "release") {
              return all;
            }
            if (context.eventName === "release" || context.eventName === "merge_group") {
              return all;
            }
            if (context.eventName === "push") {
              if (context.ref.startsWith("refs/tags/")) {
                return all;
              }
              if (context.ref === "refs/heads/main") {
                return all;
              }
            }
            return canary;

      - name: compute tag
        uses: actions/github-script@v7
        id: compute-tag
        with:
          result-encoding: string
          script: |
            if (context.eventName === "release") {
              return "latest";
            }
            if (context.eventName === "push") {
              if (context.ref.startsWith("refs/tags/")) {
                return context.ref.slice(10);
              }
              if (context.ref === "refs/heads/main") {
                return "nightly";
              }
            }
            return "canary";

      - name: log in to the container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # set latest tag for default branch
            type=raw,value={{date 'YYYYMMDD-hhmmss' tz='Europe/Berlin'}}
            type=sha
            type=raw,value=${{steps.compute-tag.outputs.result}}
      - name: build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: ${{steps.compute-arch.outputs.result}}
          push: ${{ github.ref_name == github.event.repository.default_branch }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}